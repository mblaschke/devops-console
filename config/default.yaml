application:
  features:
    kubernetes: true
    kubernetes-namespaces: true

    azure: true
    azure-resourcegroups: true
    azure-roleassignments: true

    support: false
    support-pagerduty: false

    general: true
    general-about: true


  session:
    type: {{env "SESSION_TYPE" | default "internal" | toJson }}
    expiry: {{env "SESSION_EXPIRY" | default "2h" | toJson }}

    cookieName: {{env "SESSION_COOKIE_NAME" | default "devconsole-sid" | toJson }}
    cookieSecure: {{env "SESSION_COOKIE_SECURE" | default "true" }}
    cookieDomain: {{env "SESSION_COOKIE_DOMAIN" | default "" | toJson }}
    cookieSameSite: {{env "SESSION_COOKIE_SAMESITE" | default "strict" | toJson }}

    internal: { }

    secureCookie:
      # 32 chars
      hashKey: {{env "SESSION_SECURECOOKIE_HASHKEY" | toJson }}
      # 16 chars
      blockKey: {{env "SESSION_SECURECOOKIE_BLOCKKEY" | toJson }}

    redis:
      addr: {{env "SESSION_REDIS_ADDR" | toJson }}
      timeout: {{env "SESSION_REDIS_TIMEOUT"  | default "10s" | toJson }}
      maxActive: {{env "SESSION_REDIS_MAXACTIVE"  | default "10" | int }}
      password: {{env "SESSION_REDIS_PASSWORD"  | default "" | toJson }}
      database: {{env "SESSION_REDIS_DATABASE"  | default "" | toJson }}
      delim: {{env "SESSION_REDIS_DELIM"  | default "|" | toJson }}

  oauth:
    provider: {{env "OAUTH_PROVIDER" | toJson }}
    usernamePrefix: {{env "OAUTH_USERNAME_PREFIX" | toJson }}
    groupPrefix: {{env "OAUTH_GROUPS_PREFIX" | default ""  | toJson }}
    redirectUrl: {{env "OAUTH_REDIRECT_URL" | default "" | toJson }}

    azuread:
      tenant: {{env "AZURE_TENANT_ID" | toJson }}
      clientId: {{env "AZURE_CLIENT_ID" | toJson }}
      clientSecret: {{env "AZURE_CLIENT_SECRET" | toJson }}


    filter:
      usernameWhitelist: {{env "OAUTH_USERNAME_FILTER_WHITELIST" | toJson }}
      usernameBlacklist: {{env "OAUTH_USERNAME_FILTER_BLACKLIST" | toJson }}

  notification:
    channels: {{ env "NOTIFICATION_CHANNELS" | splitList " " | toJson }}
    message: {{env "NOTIFICATION_MESSAGE" | default "%s: %s" | toJson }}

azure:
  roleassignment:
    filter:
      resourceId:
        allow: {{env "AZURE_ROLEASSIGNMENT_RESOURCEID_FILTER_ALLOW" | default "^/subscriptions/.+$" | toJson }}
        deny: {{env "AZURE_ROLEASSIGNMENT_RESOURCEID_FILTER_DENY" | default "" | toJson }}
    roledefinitions:
      - Owner
      - Contributor
      - Reader
    ttl:
      - 1h
      - 2h
      - 4h
      - 8h

  resourcegroup:
    filter:
      name:
        allow: {{env "AZURE_RESOURCEGROUP_NAME_FILTER_ALLOW" | default "^.+-rg$" | toJson }}
        deny: {{env "AZURE_RESOURCEGROUP_NAME_FILTER_DENY" | default "" | toJson }}

    tags: [ ]


kubernetes:
  objectsPath: ./config/kubernetes

  roleBinding:
    annotations: { }
    labels: { }

  namespace:
    filter:
      access:
        allow: {{env "K8S_NAMESPACE_FILTER_ACCESS_ALLOW" | default "^.+$" | toJson }}
        deny: {{env "K8S_NAMESPACE_FILTER_ACCESS_DENY" | default "^(kube-|calico-|gatekeeper-).+$" | toJson }}
      delete:
        allow: {{env "K8S_NAMESPACE_FILTER_ACCESS_ALLOW" | default "^.+$" | toJson }}
        deny: {{env "K8S_NAMESPACE_FILTER_ACCESS_DENY" | default "^(kube-|calico-|gatekeeper-).+$" | toJson }}

    validation:
      namespace:
        allow: {{env "K8S_NAMESPACE_VALIDATION_NAMESPACE_ALLOW" | default "^[a-zA-Z0-9][-a-zA-Z0-9]{2,}$" | toJson }}
        deny: {{env "K8S_NAMESPACE_VALIDATION_NAMESPACE_DENY" | default "" | toJson }}
      team:
        allow: {{env "K8S_NAMESPACE_VALIDATION_TEAM_ALLOW" | default "^[a-zA-Z0-9]{3,}$" | toJson }}
        deny: {{env "K8S_NAMESPACE_VALIDATION_TEAM_DENY" | default "" | toJson }}

    annotations:
      description: {{env "K8S_ANNOTATION_NAMESPACE_DESCRIPTION" | default "stable.webdevops.io/description" | toJson }}
      immortal: {{env "K8S_ANNOTATION_NAMESPACE_IMMORTAL" | default "stable.webdevops.io/immortal" | toJson }}
      networkPolicy: {{env "K8S_ANNOTATION_NAMESPACE_NETWORKPOLICY" | default "stable.webdevops.io/networkPolicy" | toJson }}

    labels:
      team: {{env "K8S_LABEL_TEAM" | default "owner" | toJson }}

    role:
      team: {{env "K8S_TEAM_NAMESPACEROLE" | default "admin" | toJson }}

    quota:
      team: {{env "K8S_NAMESPACE_TEAM_QUOTA" | default "0" | int }}

    settings: [ ]

    networkPolicy:
      - name: none
        description: No policy (using Cluster defaults)
      - name: allow-all
        description: Allow all traffic
        path: ./config/networkpolicy/allow-all.yaml
      - name: allow-namespace
        description: Allow all same namespace traffic
        path: ./config/networkpolicy/allow-namespace.yaml
      - name: allow-cluster
        description: Allow all cluster traffic
        path: ./config/networkpolicy/allow-cluster.yaml
      - name: deny-all
        description: Deny all traffic
        path: ./config/networkpolicy/deny-all.yaml
        default: true

support:
  pagerduty:
    authToken: {{env "PAGERDUTY_AUTH_TOKEN"  | toJson }}
    clientURL: https://events.eu.pagerduty.com/v2/enqueue

{{ if (env "PAGERDUTY_INTEGRATION_KEY") }}
    services:
      - name: {{env "PAGERDUTY_INTEGRATION_NAME" | default "Emergency ticket" | toJson }}
        integrationKey: {{env "PAGERDUTY_INTEGRATION_KEY" | toJson }}
{{ else }}
    services: []
{{ end }}

    endpointNameTemplate: |-
      %s (%s)
    endpointServiceRegexp: |-
      (?i).+
    endpointIntegrationRegexp: |-
      ^(?i)(escalation|support|devops[-_ ]?console)$

permissions:
  default:
    teams: [ ]

  user: { }
  group: { }
  team: { }
